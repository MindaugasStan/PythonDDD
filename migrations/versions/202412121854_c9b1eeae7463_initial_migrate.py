"""initial migrate

Revision ID: c9b1eeae7463
Revises: 
Create Date: 2024-12-12 18:54:27.543372+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c9b1eeae7463"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "companies",
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("company_id", name=op.f("pk_companies")),
    )
    op.create_index(
        op.f("ix_companies_company_id"),
        "companies",
        ["company_id"],
        unique=False,
    )
    op.create_table(
        "employees",
        sa.Column("employee_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("lastname", sa.Text(), nullable=False),
        sa.Column("email", sa.Text(), nullable=False),
        sa.Column("jobstartdate", sa.DateTime(timezone=True), nullable=False),
        sa.Column("jobenddate", sa.DateTime(timezone=True), nullable=False),
        sa.Column("hourlyrate", sa.Float(), nullable=False),
        sa.Column("experience", sa.Float(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("senioritylevel_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.company_id"],
            name=op.f("fk_employees_company_id_companies"),
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["senioritylevel_id"],
            ["companies.company_id"],
            name=op.f("fk_employees_senioritylevel_id_companies"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("employee_id", name=op.f("pk_employees")),
    )
    op.create_index(
        op.f("ix_employees_employee_id"),
        "employees",
        ["employee_id"],
        unique=False,
    )
    op.create_table(
        "seniority_levels",
        sa.Column("seniority_level_id", sa.Integer(), nullable=False),
        sa.Column("levelname", sa.Text(), nullable=False),
        sa.Column("multiplier", sa.Float(), nullable=False),
        sa.Column("time_needed", sa.Float(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companies.company_id"],
            name=op.f("fk_seniority_levels_company_id_companies"),
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint(
            "seniority_level_id", name=op.f("pk_seniority_levels")
        ),
    )
    op.create_index(
        op.f("ix_seniority_levels_seniority_level_id"),
        "seniority_levels",
        ["seniority_level_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_seniority_levels_seniority_level_id"),
        table_name="seniority_levels",
    )
    op.drop_table("seniority_levels")
    op.drop_index(op.f("ix_employees_employee_id"), table_name="employees")
    op.drop_table("employees")
    op.drop_index(op.f("ix_companies_company_id"), table_name="companies")
    op.drop_table("companies")
    # ### end Alembic commands ###
